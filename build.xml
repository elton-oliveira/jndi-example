<project name="JNDI-Example" xmlns:ivy="antlib:org.apache.ivy.ant" default="empacotar">

	<path id="ivy.lib.path">
		<pathelement location="ivy-2.3.0.jar" />
	</path>
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />

	<property file="build.properties" />

	<path id="classpath.compile">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath.test.compile">
		<path refid="classpath.compile" />
		<pathelement path="build/classes" />
		<fileset dir="${test.lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath.test.run">
		<path refid="classpath.test.compile" />
		<pathelement path="${test-class.dir}" />
	</path>


	<!-- ================================= 
       target: clean              
      ================================= -->
	<target name="limpar">
		<delete dir="${lib.dir}" />
		<mkdir dir="${lib.dir}" />
		<delete dir="${test.lib.dir}" />
		<mkdir dir="${test.lib.dir}" />
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${class.dir}" />
		<mkdir dir="${test-class.dir}" />
	</target>


	<!-- ================================= 
       target: resolve              
      ================================= -->
	<target name="resolver" description="resolver as dependências do projeto" depends="limpar">
		<ivy:retrieve conf="teste" pattern="${test.lib.dir}/[artifact]-[revision].[ext]"/>
		<ivy:retrieve conf="principal" pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
	</target>


	<!-- ================================= 
       target: compile              
      ================================= -->
	<target name="compilar" depends="resolver">
		<javac srcdir="src" destdir="${class.dir}" >
			<classpath refid="classpath.compile"/>
		</javac>
	</target>


	<!-- ================================= 
       target: package              
      ================================= -->
	<!-- o jndi properties também precisa fazer parte do jar, depois rever isso ?????-->
	<!-- a lib também precisa fazer parte do jar, depois rever isso ?????-->
	<target name="empacotar" depends="compilar" >
		<!-- O atributo basedir indica onde estão os .class necessários para gerar o jar-->
		<jar destfile="${build.dir}/jndi-example.jar" basedir="${class.dir}" />
	</target>


	<!-- ================================= 
       target: compile test              
      ================================= -->
	<target name="compilar-teste" depends="compilar">
		<javac destdir="${test-class.dir}" srcdir="test" >
			<classpath refid="classpath.test.compile" />
		</javac>
	</target>


	<!-- ================================= 
       target: run tests              
      ================================= -->
	<target name="executar-testes" depends="compilar-teste">
		<junit haltonfailure="true">
			<!-- When the tests are run a report must show the result.
			This report is generated by the batchtest task and todir attribute indicates the folder where the report should be generated. 
			Besides it is necessary to indicate the source code of the tests. -->
			<batchtest todir="${build.dir}">
				<formatter type="plain" />
				<fileset dir="test">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<classpath refid="classpath.test.run" />
		</junit>
	</target>


</project>